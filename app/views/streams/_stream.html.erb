
<% stream_hash_array.each do |stream_hash|
  icons = {}
  icons[:likes] = Like.where(like_type:"like", target_type: stream_hash[:stream].streamable_type, target_id: stream_hash[:stream].streamable_id).count
  icons[:dislikes] = Like.where(like_type:"dislike",target_type: stream_hash[:stream].streamable_type, target_id:stream_hash[:stream].streamable_id).count
  icons[:replies] = Stream.where(target_type:stream_hash[:stream].streamable_type, target_id: stream_hash[:stream].streamable_id).count
  %>
<%#need to use a seperate method here to create the recursive effect on the embedded stream arrays.%>
<%# stream_hash_process(stream_hash) %>
  <div class = "prediction-post-comment" id="first_one">
    <div class = "row" style = "margin-left: <%= stream_hash[:nest_count] * 20 %>px;">

      <%if stream_hash[:stream].streamable_type == "Comment" %>
        <%= render partial: "streams/stream_comment", locals: {comment: stream_hash[:stream].streamable} %>
      <% elsif stream_hash[:stream].streamable_type == "Prediction" %>
        <%= render partial: "streams/stream_prediction", locals: {prediction: stream_hash[:stream].streamable} %>
      <% elsif stream_hash[:stream].streamable_type == "Newsarticle" %>
        <%= render partial: "streams/stream_newsarticle", locals: {newsarticle: stream_hash[:stream].streamable} %>
      <%end%>

      <%= render partial: "streams/stream_comment_form", locals: {stream_string: "#{stream_hash[:stream].streamable_type}:#{stream_hash[:stream].streamable_id}"} %>

  <%#the stream icons partial closes the top 2 divs %>
  <%= render partial: "streams/stream_icons", locals: {icons: icons, stream: stream_hash[:stream]} %>

  <%unless stream_hash[:sub_hash_array].empty? %>
    <%= render partial: "streams/stream", locals: {stream_hash_array: stream_hash[:sub_hash_array]} %>
  <% end %>
<% end %>  

